[{"name": "app.py", "content": "import plotly.express as px\nfrom shiny.express import input, ui\nfrom shinywidgets import render_plotly\nfrom pathlib import Path\nimport palmerpenguins\nimport pandas\nimport matplotlib.pyplot as plt\nfrom shiny import reactive\nfrom shiny.express import render, ui\nimport seaborn as sns\n\n\n# Load the Palmer Penguins dataset\npenguins_df = palmerpenguins.load_penguins()\n\n# Optional title for the app\napp_title = \"Penguins Dataset Exploration\"\n\n# UI Layout for the App\nui.page_opts(title=\"Elen's Palmer Penguin Dataset Exploration\", fillable=True)\n\nwith ui.sidebar(bg=\"#f8f8f8\"):\n    ui.input_selectize(\"selected_species_list\", \"Select Species\", [\"Adelie\", \"Gentoo\", \"Chinstrap\"], multiple=True)\n    ui.input_selectize(\"selected_island_list\", \"Select Island\", [\"Biscoe\", \"Dream\", \"Torgersen\"], multiple=True)\n    ui.input_slider(\"flipper_length_mm\", \"Flipper length (mm)\", 150, 250, (150, 250))\n    ui.input_slider(\"bill_depth_mm\", \"Bill depth (mm)\", 13, 21, (13, 21))\n    ui.input_slider(\"bill_length_mm\", \"Bill length (mm)\", 30, 60, (30, 60))\n    ui.input_slider(\"body_mass_g\", \"Body mass (g)\", 2500, 6500, (2500, 6500))\n    ui.input_selectize(\"sex\", \"Select Sex\", [\"Male\", \"Female\"])\n    ui.input_slider(\"year\", \"Select Year\", 2007, 2009, 2008)\n\nwith ui.navset_card_underline():\n    with ui.nav_panel(\"Filtered Table\"):\n        @render.table\n        def filtered_table():\n            return filtered_data()\n\n    with ui.nav_panel(\"Histogram\"):\n        @render_plotly\n        def plotly_histogram():\n            filtered_df = filtered_data()\n            return px.histogram(filtered_df, x=\"flipper_length_mm\", color=\"species\", \n                                 title=\"Flipper Length Histogram\")\n\n    with ui.nav_panel(\"Scatterplot\"):\n        @render_plotly\n        def plotly_scatterplot():\n            filtered_df = filtered_data()\n            return px.scatter(filtered_df, x=\"flipper_length_mm\", y=\"bill_length_mm\", color=\"species\",\n                               title=\"Flipper Length vs. Bill Length\")\n\n    with ui.nav_panel(\"Seaborn Histogram\"):\n        @render.plot\n        def seaborn_histogram():\n            filtered_df = filtered_data()\n            fig, ax = plt.subplots()\n            sns.histplot(data=filtered_df, x=\"body_mass_g\", hue=\"species\", multiple=\"stack\", ax=ax)\n            ax.set_title(\"Body Mass Distribution (Seaborn)\")\n            ax.set_xlabel(\"Mass (g)\")\n            ax.set_ylabel(\"Count\")\n            return fig\n\n# Reactive function to filter data\n@reactive.Calc\ndef filtered_data():\n    data = penguins_df.copy()\n\n    # Filter by species\n    selected_species = input.selected_species_list()\n    if selected_species:\n        data = data[data['species'].isin(selected_species)]\n    \n    # Filter by islands\n    selected_islands = input.selected_island_list()\n    if selected_islands:\n        data = data[data['island'].isin(selected_islands)]\n\n    # Filter by flipper length\n    flipper_length = input.flipper_length_mm\n    if isinstance(flipper_length, list) and len(flipper_length) == 2:\n        data = data[(data['flipper_length_mm'] >= flipper_length[0]) & \n                    (data['flipper_length_mm'] <= flipper_length[1])]\n\n    # Additional filtering can go here...\n\n    return data\n\n# Server logic\ndef server(input, output, session):\n    @output\n    @render.table\n    def filtered_table():\n        return filtered_data()\n\n    @output\n    @render_plotly\n    def plotly_histogram():\n        filtered_df = filtered_data()\n        return px.histogram(filtered_df, x=\"flipper_length_mm\", color=\"species\", title=\"Flipper Length Histogram\")\n\n    @output\n    @render_plotly\n    def plotly_scatterplot():\n        filtered_df = filtered_data()\n        return px.scatter(filtered_df, x=\"flipper_length_mm\", y=\"bill_length_mm\", color=\"species\", title=\"Flipper Length vs. Bill Length\")\n\n    @output\n    @render.plot\n    def seaborn_histogram():\n        filtered_df = filtered_data()\n        fig, ax = plt.subplots()\n        sns.histplot(data=filtered_df, x=\"body_mass_g\", hue=\"species\", multiple=\"stack\", ax=ax)\n        ax.set_title(\"Body Mass Distribution (Seaborn)\")\n        ax.set_xlabel(\"Body Mass (g)\")\n        ax.set_ylabel(\"Count\")\n        return fig\n\n\ndef create_hyperlink(text, href, target=\"_blank\"):\n    return f'<a href=\"{href}\" target=\"{target}\">{text}</a>'\n\n# Usage\nhyperlink = create_hyperlink(\"Cintel-04 Local\", href=\"https://github.com/Elen-tesfai/cintel-04-local\", target=\"_blank\")\nprint(hyperlink)", "type": "text"}]